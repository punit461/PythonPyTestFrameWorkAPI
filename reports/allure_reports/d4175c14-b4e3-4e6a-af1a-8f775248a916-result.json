{"name": "test_successful_login", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidURL: Invalid URL 'https://://p647kyo1i.devassisto.com/api/auth/login': No host supplied", "trace": "self = <PythonPyTestFrameWorkAPI.tests.test_api.TestExampleAPI object at 0x0000014A13CC3490>\nsetup = ('https://://p647kyo1i.devassisto.com', <configs.config.ConfigReader object at 0x0000014A13CC31C0>)\n\n    def test_successful_login(self, setup):\n        base_url, config_reader = setup\n        api = config_reader.get_api()\n        login = config_reader.get_login()\n    \n        data = {\n            \"email\": \"p647kyo1ie@icznn.com\",\n            \"password\": \"Password@123\"\n        }\n    \n>       resp = send_request('POST', url=base_url + api + login, data=data)\n\ntests\\test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\common.py:32: in send_request\n    response = requests.request(method=method, url=url, headers=headers, params=params, data=data, auth=auth)\nvenv\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\nvenv\\lib\\site-packages\\requests\\sessions.py:486: in prepare_request\n    p.prepare(\nvenv\\lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [POST]>, url = 'https://://p647kyo1i.devassisto.com/api/auth/login', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\n    \n        if not host:\n>           raise InvalidURL(f\"Invalid URL {url!r}: No host supplied\")\nE           requests.exceptions.InvalidURL: Invalid URL 'https://://p647kyo1i.devassisto.com/api/auth/login': No host supplied\n\nvenv\\lib\\site-packages\\requests\\models.py:445: InvalidURL"}, "start": 1694171802677, "stop": 1694171802677, "uuid": "2070d873-db97-4aba-b373-475aab907f85", "historyId": "e4f0881b527146040aef34ddac18ca93", "testCaseId": "e4f0881b527146040aef34ddac18ca93", "fullName": "tests.test_api.TestExampleAPI#test_successful_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestExampleAPI"}, {"name": "host", "value": "LAP148-NSP-NSGroup"}, {"name": "thread", "value": "24816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}